{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": { "description": "Location for all resources" }
    },
    "prefix": {
      "type": "string",
      "defaultValue": "avatarchat",
      "metadata": { "description": "Prefix used for resource names" }
    },
    "storageSku": {
      "type": "string",
      "defaultValue": "Standard_LRS"
    },
    "postgresAdmin": {
      "type": "string",
      "defaultValue": "pgadmin"
    },
    "postgresAdminPassword": {
      "type": "secureString",
      "metadata": { "description": "PostgreSQL admin password" }
    },
    "webChatImage": {
      "type": "string",
      "defaultValue": "mcr.microsoft.com/azuredocs/hello-app:latest",
      "metadata": { "description": "Container image for web chat app" }
    },
    "avatarTextImage": {
      "type": "string",
      "defaultValue": "mcr.microsoft.com/yourorg/avatar-text:latest",
      "metadata": { "description": "Container image for avatar text-response app" }
    },
    "avatarVisemeImage": {
      "type": "string",
      "defaultValue": "mcr.microsoft.com/yourorg/avatar-viseme:latest",
      "metadata": { "description": "Container image for viseme generation app" }
    },
    "cosmosOfferType": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": ["Standard"]
    }
  },
  "variables": {
    "functionStorageName": "[toLower(concat(parameters('prefix'),'funcstore',uniqueString(resourceGroup().id)))]",
    "containerEnvName": "[concat(parameters('prefix'), '-ca-env')]",
    "containerAppWebChatName": "[concat(parameters('prefix'), '-webchat')]",
    "containerAppTextName": "[concat(parameters('prefix'), '-avatar-text')]",
    "containerAppVisemeName": "[concat(parameters('prefix'), '-avatar-viseme')]",
    "cosmosName": "[concat(parameters('prefix'), '-cosmos')]",
    "postgresName": "[concat(parameters('prefix'), '-pg')]",
    "signalRName": "[concat(parameters('prefix'), '-signalr')]",
    "cogNameSuffix": "[uniqueString(resourceGroup().id)]",
    "cogTranslatorName": "[concat(parameters('prefix'),'-translator-', variables('cogNameSuffix'))]",
    "cogSpeechName": "[concat(parameters('prefix'),'-speech-', variables('cogNameSuffix'))]",
    "cogSearchName": "[concat(parameters('prefix'),'-search-', variables('cogNameSuffix'))]",
    "cogFormRecName": "[concat(parameters('prefix'),'-formrec-', variables('cogNameSuffix'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-09-01",
      "name": "[variables('functionStorageName')]",
      "location": "[parameters('location')]",
      "sku": { "name": "[parameters('storageSku')]" },
      "kind": "StorageV2",
      "properties": { "accessTier": "Hot" }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-02-01",
      "kind": "functionapp",
      "name": "[concat(parameters('prefix'), '-func')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('functionStorageName'))]"
      ],
      "properties": {
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('functionStorageName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('functionStorageName')), '2021-09-01').keys[0].value)]"
            },
            { "name": "FUNCTIONS_EXTENSION_VERSION", "value": "~4" },
            { "name": "FUNCTIONS_WORKER_RUNTIME", "value": "node" }
          ]
        }
      }
    },
    {
      "type": "Microsoft.DBforPostgreSQL/flexibleServers",
      "apiVersion": "2021-06-01",
      "name": "[variables('postgresName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "GP_Standard_D2s_v3",
        "tier": "GeneralPurpose",
        "family": "Gen5",
        "capacity": 2
      },
      "properties": {
        "administratorLogin": "[parameters('postgresAdmin')]",
        "administratorLoginPassword": "[parameters('postgresAdminPassword')]",
        "version": "13",
        "storage": { "storageSizeGB": 32 }
      }
    },
    {
      "type": "Microsoft.SignalRService/signalR",
      "apiVersion": "2021-10-01",
      "name": "[variables('signalRName')]",
      "location": "[parameters('location')]",
      "sku": { "name": "Standard_S1", "tier": "Standard", "capacity": 1 },
      "properties": { "features": [], "disableLocalAuth": false }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2021-04-15",
      "name": "[variables('cosmosName')]",
      "location": "[parameters('location')]",
      "kind": "GlobalDocumentDB",
      "properties": {
        "databaseAccountOfferType": "[parameters('cosmosOfferType')]",
        "locations": [{ "locationName": "[parameters('location')]" }],
        "capabilities": [],
        "consistencyPolicy": { "defaultConsistencyLevel": "Session" }
      }
    },
    {
      "type": "Microsoft.App/managedEnvironments",
      "apiVersion": "2022-03-01",
      "name": "[variables('containerEnvName')]",
      "location": "[parameters('location')]",
      "properties": {}
    },
    {
      "type": "Microsoft.App/containerApps",
      "apiVersion": "2022-03-01",
      "name": "[variables('containerAppWebChatName')]",
      "location": "[parameters('location')]",
      "dependsOn": ["[resourceId('Microsoft.App/managedEnvironments', variables('containerEnvName'))]"],
      "properties": {
        "managedEnvironmentId": "[resourceId('Microsoft.App/managedEnvironments', variables('containerEnvName'))]",
        "configuration": { "ingress": { "external": true, "targetPort": 80 } },
        "template": {
          "containers": [{ "name": "webchat", "image": "[parameters('webChatImage')]", "resources": { "cpu": 0.5, "memory": "1Gi" } }],
          "scale": { "minReplicas": 1, "maxReplicas": 3 }
        }
      }
    },
    {
      "type": "Microsoft.App/containerApps",
      "apiVersion": "2022-03-01",
      "name": "[variables('containerAppTextName')]",
      "location": "[parameters('location')]",
      "dependsOn": ["[resourceId('Microsoft.App/managedEnvironments', variables('containerEnvName'))]"],
      "properties": {
        "managedEnvironmentId": "[resourceId('Microsoft.App/managedEnvironments', variables('containerEnvName'))]",
        "configuration": { "ingress": { "external": false, "targetPort": 8080 } },
        "template": {
          "containers": [{ "name": "avatar-text", "image": "[parameters('avatarTextImage')]", "resources": { "cpu": 0.5, "memory": "1Gi" } }],
          "scale": { "minReplicas": 1, "maxReplicas": 3 }
        }
      }
    },
    {
      "type": "Microsoft.App/containerApps",
      "apiVersion": "2022-03-01",
      "name": "[variables('containerAppVisemeName')]",
      "location": "[parameters('location')]",
      "dependsOn": ["[resourceId('Microsoft.App/managedEnvironments', variables('containerEnvName'))]"],
      "properties": {
        "managedEnvironmentId": "[resourceId('Microsoft.App/managedEnvironments', variables('containerEnvName'))]",
        "configuration": { "ingress": { "external": false, "targetPort": 8080 } },
        "template": {
          "containers": [{ "name": "avatar-viseme", "image": "[parameters('avatarVisemeImage')]", "resources": { "cpu": 0.5, "memory": "1Gi" } }],
          "scale": { "minReplicas": 1, "maxReplicas": 2 }
        }
      }
    },
    {
      "type": "Microsoft.CognitiveServices/accounts",
      "apiVersion": "2021-10-01",
      "name": "[variables('cogTranslatorName')]",
      "location": "[parameters('location')]",
      "sku": { "name": "F0" },
      "kind": "TextTranslation",
      "properties": { "publicNetworkAccess": "Enabled" }
    },
    {
      "type": "Microsoft.CognitiveServices/accounts",
      "apiVersion": "2021-10-01",
      "name": "[variables('cogSpeechName')]",
      "location": "[parameters('location')]",
      "sku": { "name": "S0" },
      "kind": "SpeechServices",
      "properties": { "publicNetworkAccess": "Enabled" }
    },
    {
      "type": "Microsoft.CognitiveServices/accounts",
      "apiVersion": "2021-10-01",
      "name": "[variables('cogSearchName')]",
      "location": "[parameters('location')]",
      "sku": { "name": "S1" },
      "kind": "Search",
      "properties": { "publicNetworkAccess": "Enabled" }
    },
    {
      "type": "Microsoft.CognitiveServices/accounts",
      "apiVersion": "2021-10-01",
      "name": "[variables('cogFormRecName')]",
      "location": "[parameters('location')]",
      "sku": { "name": "S0" },
      "kind": "FormRecognizer",
      "properties": { "publicNetworkAccess": "Enabled" }
    }
  ],
  "outputs": {
    "functionAppName": { "type": "string", "value": "[concat(parameters('prefix'), '-func')]" },
    "signalRName": { "type": "string", "value": "[variables('signalRName')]" },
    "cosmosAccountName": { "type": "string", "value": "[variables('cosmosName')]" },
    "postgresServerName": { "type": "string", "value": "[variables('postgresName')]" },
    "containerAppWebChat": { "type": "string", "value": "[variables('containerAppWebChatName')]" },
    "containerAppText": { "type": "string", "value": "[variables('containerAppTextName')]" },
    "containerAppViseme": { "type": "string", "value": "[variables('containerAppVisemeName')]" },
    "cognitiveServices": {
      "type": "object",
      "value": {
        "translator": "[variables('cogTranslatorName')]",
        "speech": "[variables('cogSpeechName')]",
        "search": "[variables('cogSearchName')]",
        "formRecognizer": "[variables('cogFormRecName')]"
      }
    }
  }
}
